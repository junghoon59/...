// 기존의 마킹설정을 마무리 하고, 마킹작업도 마무리 한 후에,  Yolo_mark/x64/Release/data/ 안에 있는 
// yolo-obj.cfg파일 , img 디렉토리와 obj.names , obj.data , train.txt를 모두  darknet/data 폴더 안으로 이동시킨다.
// 학습을 위해 http://pjreddie.com/media/files/darknet19_448.conv.23 필요한 파일을 설치하고, darknet디렉토리 안에 넣어준다.
// 준비가 완료 되었고 학습을 시작한다.


-> cd darknet
-> ./darknet detector train data/obj.data yolo-obj.cfg darknet19_448.conv.23
// 명령어를 입력하면 학습을 진행하는데, 이때 경로설정이 옳지 않으므로, error매세지가 뜰것이다.

// train.txt 에서는 Yolo_mark의 경로로 지정이 되어있기때문에 현재 있는 디렉토리 안의 경로 인식이 되어있지 않은 상태이다.
따라서, x64/Release/까지의 경로를 모두 지워준 후에 다시 명령어를 입력한 후에 진행을 해야한다.

// 학습을 진행하면, avg라는 단어가 나오는데 손실율로서, 가장 낮아질때까지 학습을 진행하게 된다. 학습을 진행하다보면
// 100번 200번 등 00단위 내지는 000 단위마다 가중치 파일이 생성됨을 볼 수 있다. 이걸 바탕으로 비교 분석 결과를 도출하는 것이다.

// 학습을 하다 중간에 멈춰야 하는경우에는 backup파일이 존재하는데 역시 00 단위부터는 세이브 된다는 개념으로 진행이 되기 때문에 명령어를
// 바꿔서, ./darknet detector train data/obj.data yolo-obj.cfg backup/yolo-obj.backup 같은 예시로 진행을 하면, 이미지 추가가 
// 없는 이상 이어서 학습이 가능하다.
// 학습된 가중치 파일을 darknet 폴더내에 backup폴더 안에 저장된다.
